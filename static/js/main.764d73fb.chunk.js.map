{"version":3,"sources":["App.module.css","Components/Merge.jsx","Components/SelectionSort.jsx","Components/BubbleSort.jsx","Components/QuickSort.jsx","App.js","index.js"],"names":["module","exports","MergeSort","wait","generateArray","arr","isSorted","setIsSorted","notify","useState","nums","setNums","active","setActive","setCounter","useEffect","mergeArrays","l","m","r","a","n1","n2","left","right","i","j","k","prev","x","handleSort","Math","floor","className","styles","container","map","n","style","background","height","buttonDiv","border","onClick","length","SelectionSort","ind","setInd","current","setCurrent","minInd","BubbleSort","num","temp","QuickSort","active2","setActive2","lo","hi","pivot","p","theme","createTheme","palette","secondary","main","App","arrSize","setArrSize","setArr","timer","setTimer","header","setHeader","delay","Promise","ac","setTimeout","handleHeaderSort","toast","newArray","randomInt","ceil","random","push","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","color","justifyContent","display","fontSize","letterSpacing","fontWeight","paddingRight","nav","to","transform","slider","ThemeProvider","sliderWrapper","Slider","onChange","e","target","value","handleArrSlider","defaultValue","step","marks","min","max","size","arrays","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.764d73fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2sjK8\",\"container\":\"App_container__14etO\",\"nav\":\"App_nav__2Bf1D\",\"arrays\":\"App_arrays__FfrC5\",\"slider\":\"App_slider__2TS2c\",\"buttonDiv\":\"App_buttonDiv__3KCHA\",\"sliderWrapper\":\"App_sliderWrapper__2UB48\"};","// import { generateArray } from \"./bubbleSort\";\r\nimport styles from \"../App.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const MergeSort = ({\r\n  wait,\r\n  generateArray,\r\n  arr,\r\n  isSorted,\r\n  setIsSorted,\r\n  notify,\r\n}) => {\r\n  const [nums, setNums] = useState([]);\r\n  const [active, setActive] = useState(-20);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // let arr = generateArray();\r\n    setNums(arr);\r\n    // console.log(arr);\r\n  }, [arr]);\r\n\r\n  const mergeArrays = async (arr, l, m, r) => {\r\n    let n1 = m - l + 1;\r\n    let n2 = r - m;\r\n\r\n    let left = [];\r\n    let right = [];\r\n\r\n    for (let i = 0; i < n1; i++) {\r\n      left[i] = arr[l + i];\r\n    }\r\n\r\n    for (let j = 0; j < n2; j++) {\r\n      right[j] = arr[m + 1 + j];\r\n    }\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n\r\n    while (i < n1 && j < n2) {\r\n      setCounter((prev) => prev + 1);\r\n      if (left[i] <= right[j]) {\r\n        setActive(k);\r\n        arr[k] = left[i];\r\n        let x = [...arr];\r\n        setNums(x);\r\n        i++;\r\n      } else {\r\n        setActive(k);\r\n        arr[k] = right[j];\r\n        let x = [...arr];\r\n        setNums(x);\r\n        j++;\r\n      }\r\n      k++;\r\n      await wait();\r\n    }\r\n\r\n    while (i < n1) {\r\n      setActive(k);\r\n      arr[k] = left[i];\r\n      let x = [...arr];\r\n      setNums(x);\r\n      i++;\r\n      k++;\r\n    }\r\n    while (j < n2) {\r\n      setActive(k);\r\n      arr[k] = right[j];\r\n      let x = [...arr];\r\n      setNums(x);\r\n      j++;\r\n      k++;\r\n    }\r\n\r\n    let x = [...arr];\r\n    setNums(x);\r\n    setIsSorted(true);\r\n    setActive(-10);\r\n  };\r\n\r\n  const handleSort = async (a, l, r) => {\r\n    if (isSorted) {\r\n      notify();\r\n      return;\r\n    }\r\n    if (l >= r) {\r\n      let x = [...a];\r\n      setNums(x);\r\n      setActive(-10);\r\n      return;\r\n    }\r\n    const m = l + Math.floor((r - l) / 2);\r\n    await handleSort(a, l, m);\r\n    await handleSort(a, m + 1, r);\r\n    wait();\r\n    await mergeArrays(a, l, m, r);\r\n  };\r\n\r\n  // const handleSort = () => {\r\n\r\n  // }\r\n\r\n  const handleRandomnArray = () => {\r\n    setIsSorted(false);\r\n    generateArray();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {nums &&\r\n          nums.map((n, i) => (\r\n            <div\r\n              style={{\r\n                background: i === active ? \"#ffce42\" : \"#63d2dd\",\r\n                height: `${n * 4.5}px`,\r\n              }}\r\n            >\r\n              {/* {n} */}\r\n            </div>\r\n          ))}\r\n        <div></div>\r\n      </div>\r\n      <div className={styles.buttonDiv}>\r\n        <button\r\n          style={{ border: \"4px solid #63d2dd\" }}\r\n          onClick={() => {\r\n            handleSort(nums, 0, nums.length - 1);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Sort the array{\" \"}\r\n        </button>\r\n\r\n        <button\r\n          style={{ border: \"4px solid #63d2dd\" }}\r\n          onClick={handleRandomnArray}\r\n        >\r\n          {\" \"}\r\n          Randomn Array\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// import { generateArray } from \"./bubbleSort\";\r\nimport styles from \"../App.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const SelectionSort = ({\r\n  wait,\r\n  generateArray,\r\n  arr,\r\n  isSorted,\r\n  setIsSorted,\r\n  notify,\r\n}) => {\r\n  const [nums, setNums] = useState(arr);\r\n  const [active, setActive] = useState(-20);\r\n  const [ind, setInd] = useState(-1);\r\n  const [current, setCurrent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setNums(arr);\r\n  }, [arr]);\r\n\r\n  async function handleSort(arr) {\r\n    if (isSorted) {\r\n      notify();\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < arr.length; ) {\r\n      let minInd = i;\r\n      for (let j = i + 1; j < arr.length; j++) {\r\n        setCurrent(j);\r\n\r\n        if (arr[j] < arr[minInd]) {\r\n          minInd = j;\r\n        }\r\n        setActive(minInd);\r\n        await wait(3);\r\n      }\r\n      [arr[i], arr[minInd]] = [arr[minInd], arr[i]];\r\n      setInd(i);\r\n      i++;\r\n    }\r\n    setActive(null);\r\n    setCurrent(null);\r\n    setIsSorted(true);\r\n  }\r\n\r\n  const handleRandomnArray = () => {\r\n    setIsSorted(false);\r\n    setInd(-100);\r\n    generateArray();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {nums &&\r\n          nums.map((n, i) => (\r\n            <div\r\n              style={{\r\n                background:\r\n                  i === active || i === current\r\n                    ? \"#ffd700\"\r\n                    : i > ind\r\n                    ? \"#808080\"\r\n                    : \"#dc143c\",\r\n\r\n                height: `${n * 4.5}px`,\r\n              }}\r\n            >\r\n              {/* {n} */}\r\n            </div>\r\n          ))}\r\n        <div></div>\r\n      </div>\r\n      <div className={styles.buttonDiv}>\r\n        <button\r\n          style={{ border: \"4px solid #808080\" }}\r\n          onClick={() => handleSort(nums)}\r\n        >\r\n          {\" \"}\r\n          Sort the array{\" \"}\r\n        </button>\r\n        <button\r\n          style={{ border: \"4px solid #808080\" }}\r\n          onClick={handleRandomnArray}\r\n        >\r\n          {\" \"}\r\n          Randomn Array\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport styles from \"../App.module.css\";\r\n\r\nexport const BubbleSort = ({\r\n  wait,\r\n  generateArray,\r\n  arr,\r\n  setIsSorted,\r\n  isSorted,\r\n  notify,\r\n}) => {\r\n  const [nums, setNums] = useState([]);\r\n  const [active, setActive] = useState(-20);\r\n  const [ind, setInd] = useState(1000);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // let arr = generateArray();\r\n    setNums(arr);\r\n    // setInd(arr.length + 1);\r\n  }, [arr]);\r\n\r\n  const handleRandomnArray = () => {\r\n    setIsSorted(false);\r\n    setInd(500);\r\n    setCounter(0);\r\n    let arr = generateArray();\r\n    setNums(arr);\r\n  };\r\n\r\n  const handleSort = async (num) => {\r\n    if (isSorted) {\r\n      notify();\r\n      return;\r\n    }\r\n    for (let i = 0; i < num.length - 1; ) {\r\n      for (let j = 0; j < num.length - 1 - i; ) {\r\n        setActive(j);\r\n        setCounter((prev) => prev + 1);\r\n        if (num[j] > num[j + 1]) {\r\n          [num[j], num[j + 1]] = [num[j + 1], num[j]];\r\n        }\r\n        let temp = [...nums];\r\n        setNums(temp);\r\n        j++;\r\n        await wait();\r\n      }\r\n      setInd(num.length - 1 - i);\r\n      i++;\r\n    }\r\n    setActive(-10);\r\n    setInd(0);\r\n    setIsSorted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {nums &&\r\n          nums.map((n, i) => (\r\n            <div\r\n              style={{\r\n                background:\r\n                  i === active || i === active + 1\r\n                    ? \"#f08080\"\r\n                    : i >= ind\r\n                    ? \"#8fbc8f\"\r\n                    : \"#000080\",\r\n                height: `${n * 4.5}px`,\r\n              }}\r\n            >\r\n              {/* {n} */}\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className={styles.buttonDiv}>\r\n        <button\r\n          style={{ border: \"4px solid #000080\" }}\r\n          onClick={() => handleSort(nums)}\r\n        >\r\n          {\" \"}\r\n          Sort the array{\" \"}\r\n        </button>\r\n        <button\r\n          style={{ border: \"4px solid #000080\" }}\r\n          onClick={handleRandomnArray}\r\n        >\r\n          {\" \"}\r\n          Randomn Array\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// import styles from '../App.module.css'\r\n\r\nexport const QuickSort = ({\r\n  wait,\r\n  generateArray,\r\n  arr,\r\n  isSorted,\r\n  setIsSorted,\r\n  notify,\r\n}) => {\r\n  const [nums, setNums] = useState([]);\r\n  const [active, setActive] = useState(null);\r\n  const [active2, setActive2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // let arr = generateArray();\r\n    setNums(arr);\r\n  }, [arr]);\r\n\r\n  const handleRandomnArray = () => {\r\n    setIsSorted(false);\r\n    generateArray();\r\n  };\r\n\r\n  async function handleSort(num, lo, hi) {\r\n    if (isSorted) {\r\n      notify();\r\n      return;\r\n    }\r\n    if (lo >= hi) {\r\n      return;\r\n    }\r\n    let p = await pivot(num, lo, hi);\r\n\r\n    await handleSort(num, lo, p);\r\n    await handleSort(num, p + 1, hi);\r\n\r\n    setActive(null);\r\n    setActive2(null);\r\n    setIsSorted(true);\r\n  }\r\n\r\n  async function pivot(arr, lo, hi) {\r\n    let pivot = arr[lo];\r\n    let i = lo - 1;\r\n    let j = hi + 1;\r\n\r\n    setActive(lo);\r\n\r\n    while (true) {\r\n      do {\r\n        i++;\r\n        setActive(i);\r\n      } while (arr[i] < pivot);\r\n\r\n      do {\r\n        j--;\r\n        setActive2(j);\r\n      } while (arr[j] > pivot);\r\n\r\n      if (i >= j) {\r\n        return j;\r\n      }\r\n\r\n      await wait(4);\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n      let temp = [...nums];\r\n      setNums(temp);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {nums &&\r\n          nums.map((n, i) => (\r\n            <div\r\n              style={{\r\n                background:\r\n                  i === active || i === active2\r\n                    ? \"#ffff00\"\r\n                    : n === 999\r\n                    ? \"green\"\r\n                    : \"#dda0dd\",\r\n                height: `${n * 4.5}px`,\r\n              }}\r\n            ></div>\r\n          ))}\r\n      </div>\r\n      <div className={styles.buttonDiv}>\r\n        <button\r\n          style={{ border: \"4px solid #dda0dd\" }}\r\n          onClick={() => handleSort(nums, 0, nums.length - 1)}\r\n        >\r\n          {\" \"}\r\n          Sort the array{\" \"}\r\n        </button>\r\n        <button\r\n          style={{ border: \"4px solid #dda0dd\" }}\r\n          onClick={handleRandomnArray}\r\n        >\r\n          {\" \"}\r\n          Randomn Array\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import styles from \"./App.module.css\";\r\nimport { MergeSort } from \"./Components/Merge\";\r\nimport { SelectionSort } from \"./Components/SelectionSort\";\r\nimport { BubbleSort } from \"./Components/BubbleSort\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { QuickSort } from \"./Components/QuickSort\";\r\n// import { motion } from \"framer-motion\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: \"#fffff\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [arrSize, setArrSize] = useState(100);\r\n  const [arr, setArr] = useState();\r\n  const [timer, setTimer] = useState(0);\r\n  const [header, setHeader] = useState([\r\n    [10, \"U\"],\r\n    [3, \"T\"],\r\n    [4, \"I\"],\r\n    [13, \"I\"],\r\n    [15, \"E\"],\r\n    [6, \"G\"],\r\n    [0, \"S\"],\r\n    [11, \"A\"],\r\n    [2, \"R\"],\r\n    [5, \"N\"],\r\n    [8, \"I\"],\r\n    [14, \"Z\"],\r\n    [1, \"O\"],\r\n    [12, \"L\"],\r\n    [7, \"V\"],\r\n    [9, \"S\"],\r\n    [16, \"R\"],\r\n  ]);\r\n  const [current, setCurrent] = useState(\"Quick\");\r\n  const [isSorted, setIsSorted] = useState(false);\r\n\r\n  function wait(delay) {\r\n    return new Promise((ac) => {\r\n      setTimeout(() => {\r\n        ac();\r\n        return;\r\n      }, 100 / timer);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateArray();\r\n    handleHeaderSort(header);\r\n  }, []);\r\n\r\n  const notify = () =>\r\n    toast(\"Array has already been sorted, Randomize the array and try again!\");\r\n\r\n  function generateArray(n = arrSize) {\r\n    setIsSorted(false);\r\n    let newArray = [];\r\n    for (let i = 0; i < n; i++) {\r\n      let randomInt = Math.ceil(Math.random() * 95);\r\n      newArray.push(randomInt);\r\n    }\r\n    setArr(newArray);\r\n  }\r\n\r\n  const handleHeaderSort = async (header) => {\r\n    for (let i = 0; i < header.length - 1; ) {\r\n      for (let j = 0; j < header.length - 1 - i; ) {\r\n        if (header[j][0] > header[j + 1][0]) {\r\n          [header[j], header[j + 1]] = [header[j + 1], header[j]];\r\n        }\r\n        let temp = [...header];\r\n        setHeader(temp);\r\n        j++;\r\n        await wait();\r\n      }\r\n      i++;\r\n    }\r\n  };\r\n\r\n  const handleArrSlider = (e) => {\r\n    setArrSize((prev) => e.target.value);\r\n    generateArray(e.target.value);\r\n  };\r\n\r\n  const handleTimer = (e) => {\r\n    setTimer(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div\r\n        style={{\r\n          color: \"white\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            fontSize: \"1.9rem\",\r\n            letterSpacing: \"5px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          <p>{header[0][1]}</p>\r\n          <p>{header[1][1]}</p>\r\n          <p>{header[2][1]}</p>\r\n          <p>{header[3][1]}</p>\r\n          <p>{header[4][1]}</p>\r\n          <p>{header[5][1]}</p>\r\n          <p style={{ paddingRight: \"12px\" }}>{header[6][1]}</p>\r\n          <p> </p>\r\n          <p>{header[7][1]}</p>\r\n          <p>{header[8][1]}</p>\r\n          <p>{header[9][1]}</p>\r\n          <p>{header[10][1]}</p>\r\n          <p>{header[11][1]}</p>\r\n          <p>{header[12][1]}</p>\r\n          <p>{header[13][1]}</p>\r\n          <p>{header[14][1]}</p>\r\n          <p>{header[15][1]}</p>\r\n          <p>{header[16][1]}</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.App}>\r\n        <div className={styles.nav}>\r\n          <Link to=\"/\">\r\n            <button\r\n              style={\r\n                current !== \"Quick\"\r\n                  ? { border: \"1px solid #dda0dd\" }\r\n                  : {\r\n                      background: \"#dda0dd\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      transform: \"scale(1.1)\",\r\n                    }\r\n              }\r\n              onClick={() => setCurrent(\"Quick\")}\r\n            >\r\n              {\" \"}\r\n              Quick{\" \"}\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/bubbleSort\">\r\n            <button\r\n              style={\r\n                current !== \"Bubble\"\r\n                  ? { border: \"1px solid #000080prop\" }\r\n                  : {\r\n                      background: \"#000080\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      transform: \"scale(1.1)\",\r\n                    }\r\n              }\r\n              onClick={() => setCurrent(\"Bubble\")}\r\n            >\r\n              {\" \"}\r\n              Bubble{\" \"}\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/selectionSort\">\r\n            <button\r\n              style={\r\n                current !== \"Selection\"\r\n                  ? { border: \"1px solid #808080\" }\r\n                  : {\r\n                      background: \"#808080\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      transform: \"scale(1.1)\",\r\n                    }\r\n              }\r\n              onClick={() => setCurrent(\"Selection\")}\r\n            >\r\n              {\" \"}\r\n              Selection{\" \"}\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/mergeSort\">\r\n            <button\r\n              style={\r\n                current !== \"Merge\"\r\n                  ? { border: \"1px solid #63d2dd\" }\r\n                  : {\r\n                      background: \"#63d2dd\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      transform: \"scale(1.1)\",\r\n                    }\r\n              }\r\n              onClick={() => setCurrent(\"Merge\")}\r\n            >\r\n              {\" \"}\r\n              Merge{\" \"}\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.slider}>\r\n          <ThemeProvider theme={theme}>\r\n            <div className={styles.sliderWrapper}>\r\n              <p> Array Size</p>\r\n              <Slider\r\n                onChange={(e) => handleArrSlider(e)}\r\n                defaultValue={100}\r\n                step={10}\r\n                marks\r\n                min={30}\r\n                max={100}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n            <div className={styles.sliderWrapper}>\r\n              <p>Speed</p>\r\n              <Slider\r\n                onChange={handleTimer}\r\n                defaultValue={9}\r\n                step={2}\r\n                marks\r\n                min={1}\r\n                max={11}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </ThemeProvider>\r\n        </div>\r\n        <div className={styles.arrays}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <QuickSort\r\n                arr={arr}\r\n                generateArray={generateArray}\r\n                wait={(timer) => wait(timer)}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n                notify={notify}\r\n              />\r\n            </Route>\r\n            <Route path=\"/mergeSort\">\r\n              <MergeSort\r\n                arr={arr}\r\n                generateArray={generateArray}\r\n                wait={(timer) => wait(timer)}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n                notify={notify}\r\n              />\r\n            </Route>\r\n            <Route path=\"/bubbleSort\">\r\n              <BubbleSort\r\n                arr={arr}\r\n                generateArray={generateArray}\r\n                wait={(timer) => wait(timer)}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n                notify={notify}\r\n              />\r\n            </Route>\r\n            <Route path=\"/selectionSort\">\r\n              <SelectionSort\r\n                arr={arr}\r\n                generateArray={generateArray}\r\n                wait={(timer) => wait(timer)}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n                notify={notify}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename=\"/Sorting_Algorithm_Visualizer/home\">\n    <App />\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}